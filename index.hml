<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="UTF-8" />
        <meta
            name="viewport"
            content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no"
        />
        <meta name="apple-mobile-web-app-capable" content="yes" />
        <meta
            name="apple-mobile-web-app-status-bar-style"
            content="black-translucent"
        />
        <meta name="theme-color" content="#1e5e3f" />
        <meta name="description" content="Golf Swing Tempo" />
        <link rel="icon" type="image/png" href="icon-192.png" />
        <!-- PWA Manifest -->
        <link rel="manifest" href="manifest.json" />

        <title>Golf Swing Tempo</title>

        <style>
            * {
                margin: 0;
                padding: 0;
                box-sizing: border-box;
                -webkit-tap-highlight-color: transparent;
            }

            body {
                font-family: -apple-system, BlinkMacSystemFont, "Segoe UI",
                    Roboto, Oxygen, Ubuntu, sans-serif;
                background: linear-gradient(
                    135deg,
                    #87ceeb 0%,
                    #98d98e 50%,
                    #f0f8f0 100%
                );
                min-height: 100vh;
                display: flex;
                flex-direction: column;
                padding: 20px;
                overflow-x: hidden;
            }

            .header {
                text-align: center;
                margin-bottom: 30px;
                animation: fadeIn 0.5s ease;
            }

            .header h1 {
                color: #1e5e3f;
                font-size: 2rem;
                font-weight: 700;
                text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.1);
                display: flex;
                align-items: center;
                justify-content: center;
                gap: 10px;
            }

            .golf-icon {
                font-size: 1.8rem;
            }

            .status-indicator {
                background: white;
                border-radius: 20px;
                padding: 12px 20px;
                margin: 20px auto;
                max-width: 300px;
                box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
                display: flex;
                align-items: center;
                justify-content: center;
                gap: 12px;
                transition: all 0.3s ease;
                animation: slideDown 0.5s ease;
            }

            .status-indicator.playing {
                background: linear-gradient(135deg, #4ade80, #22c55e);
                color: white;
            }

            .status-indicator.paused {
                background: linear-gradient(135deg, #fbbf24, #f59e0b);
                color: white;
            }

            .status-dot {
                width: 12px;
                height: 12px;
                border-radius: 50%;
                background: currentColor;
                animation: pulse 2s infinite;
            }

            .status-indicator.playing .status-dot {
                animation: pulse 1s infinite;
            }

            .status-indicator.paused .status-dot {
                animation: blink 1.5s infinite;
            }

            @keyframes pulse {
                0%,
                100% {
                    opacity: 1;
                    transform: scale(1);
                }
                50% {
                    opacity: 0.6;
                    transform: scale(1.2);
                }
            }

            @keyframes blink {
                0%,
                100% {
                    opacity: 1;
                }
                50% {
                    opacity: 0.3;
                }
            }

            @keyframes fadeIn {
                from {
                    opacity: 0;
                    transform: translateY(-20px);
                }
                to {
                    opacity: 1;
                    transform: translateY(0);
                }
            }

            @keyframes slideDown {
                from {
                    opacity: 0;
                    transform: translateY(-10px);
                }
                to {
                    opacity: 1;
                    transform: translateY(0);
                }
            }

            .buttons-grid {
                display: grid;
                grid-template-columns: repeat(auto-fit, minmax(140px, 1fr));
                gap: 15px;
                max-width: 500px;
                margin: 0 auto;
                width: 100%;
                animation: fadeIn 0.7s ease;
            }

            .audio-btn {
                background: linear-gradient(135deg, #ffffff 0%, #f3f4f6 100%);
                border: 3px solid #1e5e3f;
                border-radius: 15px;
                padding: 25px 20px;
                font-size: 1.3rem;
                font-weight: 600;
                color: #1e5e3f;
                cursor: pointer;
                transition: all 0.3s ease;
                position: relative;
                overflow: hidden;
                box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
                min-height: 90px;
                display: flex;
                align-items: center;
                justify-content: center;
            }

            .audio-btn:before {
                content: "";
                position: absolute;
                top: 0;
                left: -100%;
                width: 100%;
                height: 100%;
                background: linear-gradient(
                    90deg,
                    transparent,
                    rgba(255, 255, 255, 0.4),
                    transparent
                );
                transition: left 0.5s ease;
            }

            .audio-btn:hover {
                transform: translateY(-3px);
                box-shadow: 0 6px 20px rgba(0, 0, 0, 0.15);
            }

            .audio-btn:hover:before {
                left: 100%;
            }

            .audio-btn:active {
                transform: translateY(-1px);
                box-shadow: 0 3px 10px rgba(0, 0, 0, 0.15);
            }

            .audio-btn.active {
                background: linear-gradient(135deg, #22c55e 0%, #16a34a 100%);
                color: white;
                border-color: #16a34a;
                animation: buttonPulse 2s infinite;
            }

            .audio-btn.active.paused {
                background: linear-gradient(135deg, #f59e0b 0%, #d97706 100%);
                border-color: #d97706;
                animation: none;
            }

            @keyframes buttonPulse {
                0%,
                100% {
                    transform: scale(1);
                }
                50% {
                    transform: scale(1.02);
                }
            }

            .visualizer {
                display: flex;
                gap: 3px;
                margin-left: 8px;
                height: 20px;
                align-items: flex-end;
            }

            .audio-btn.active .visualizer {
                display: inline-flex;
            }

            .audio-btn:not(.active) .visualizer {
                display: none;
            }

            .bar {
                width: 3px;
                background: currentColor;
                animation: wave 1s ease-in-out infinite;
            }

            .audio-btn.active.paused .bar {
                animation: none;
                height: 10px !important;
            }

            .bar:nth-child(1) {
                animation-delay: 0s;
                height: 10px;
            }
            .bar:nth-child(2) {
                animation-delay: 0.1s;
                height: 15px;
            }
            .bar:nth-child(3) {
                animation-delay: 0.2s;
                height: 8px;
            }
            .bar:nth-child(4) {
                animation-delay: 0.3s;
                height: 12px;
            }

            @keyframes wave {
                0%,
                100% {
                    height: 8px;
                }
                50% {
                    height: 20px;
                }
            }

            .btn-content {
                display: flex;
                align-items: center;
                gap: 8px;
            }

            @media (max-width: 480px) {
                .header h1 {
                    font-size: 1.6rem;
                }

                .buttons-grid {
                    grid-template-columns: repeat(2, 1fr);
                    gap: 12px;
                }

                .audio-btn {
                    font-size: 1.1rem;
                    padding: 20px 15px;
                    min-height: 80px;
                }
            }

            @media (min-width: 768px) {
                .buttons-grid {
                    grid-template-columns: repeat(3, 1fr);
                    max-width: 600px;
                }
            }
        </style>
    </head>
    <body>
        <div class="header">
            <h1>
                <span class="golf-icon">üèåÔ∏è</span>
                Golf Swing Tempo
            </h1>
        </div>

        <div class="status-indicator" id="statusIndicator">
            <span class="status-dot"></span>
            <span id="statusText">Ready</span>
        </div>

        <div class="buttons-grid">
            <button class="audio-btn" data-sound="30_10.mp3">
                <div class="btn-content">
                    <span>30/10</span>
                    <div class="visualizer">
                        <div class="bar"></div>
                        <div class="bar"></div>
                        <div class="bar"></div>
                        <div class="bar"></div>
                    </div>
                </div>
            </button>
            <button class="audio-btn" data-sound="27_9.mp3">
                <div class="btn-content">
                    <span>27/9</span>
                    <div class="visualizer">
                        <div class="bar"></div>
                        <div class="bar"></div>
                        <div class="bar"></div>
                        <div class="bar"></div>
                    </div>
                </div>
            </button>
            <button class="audio-btn" data-sound="24_8.mp3">
                <div class="btn-content">
                    <span>24/8</span>
                    <div class="visualizer">
                        <div class="bar"></div>
                        <div class="bar"></div>
                        <div class="bar"></div>
                        <div class="bar"></div>
                    </div>
                </div>
            </button>
            <button class="audio-btn" data-sound="21_7.mp3">
                <div class="btn-content">
                    <span>21/7</span>
                    <div class="visualizer">
                        <div class="bar"></div>
                        <div class="bar"></div>
                        <div class="bar"></div>
                        <div class="bar"></div>
                    </div>
                </div>
            </button>
            <button class="audio-btn" data-sound="18_6.mp3">
                <div class="btn-content">
                    <span>18/6</span>
                    <div class="visualizer">
                        <div class="bar"></div>
                        <div class="bar"></div>
                        <div class="bar"></div>
                        <div class="bar"></div>
                    </div>
                </div>
            </button>
            <button class="audio-btn" data-sound="15_5.mp3">
                <div class="btn-content">
                    <span>15/5</span>
                    <div class="visualizer">
                        <div class="bar"></div>
                        <div class="bar"></div>
                        <div class="bar"></div>
                        <div class="bar"></div>
                    </div>
                </div>
            </button>
        </div>

        <script>
            // Audio player management
            let currentAudio = null;
            let currentButton = null;
            let isPaused = false;

            const statusIndicator = document.getElementById("statusIndicator");
            const statusText = document.getElementById("statusText");
            const buttons = document.querySelectorAll(".audio-btn");

            // Initialize Media Session API
            if ("mediaSession" in navigator) {
                navigator.mediaSession.metadata = new MediaMetadata({
                    title: "Golf Swing Tempo",
                    artist: "Golf Training",
                    album: "Training Sounds",
                });

                navigator.mediaSession.setActionHandler("play", () => {
                    if (currentAudio && isPaused) {
                        currentAudio.play();
                        updateStatus("playing");
                    }
                });

                navigator.mediaSession.setActionHandler("pause", () => {
                    if (currentAudio && !isPaused) {
                        currentAudio.pause();
                        updateStatus("paused");
                    }
                });

                navigator.mediaSession.setActionHandler("stop", () => {
                    stopCurrentAudio();
                });
            }

            function updateStatus(state) {
                statusIndicator.className = "status-indicator";

                if (state === "playing") {
                    isPaused = false;
                    statusIndicator.classList.add("playing");
                    statusText.textContent = currentButton
                        ? `Playing: ${
                              currentButton.querySelector("span").textContent
                          }`
                        : "Playing";
                    if (currentButton) {
                        currentButton.classList.add("active");
                        currentButton.classList.remove("paused");
                    }
                    if ("mediaSession" in navigator) {
                        navigator.mediaSession.playbackState = "playing";
                    }
                } else if (state === "paused") {
                    isPaused = true;
                    statusIndicator.classList.add("paused");
                    statusText.textContent = currentButton
                        ? `Paused: ${
                              currentButton.querySelector("span").textContent
                          }`
                        : "Paused";
                    if (currentButton) {
                        currentButton.classList.add("paused");
                    }
                    if ("mediaSession" in navigator) {
                        navigator.mediaSession.playbackState = "paused";
                    }
                } else {
                    isPaused = false;
                    statusText.textContent = "Ready";
                    if ("mediaSession" in navigator) {
                        navigator.mediaSession.playbackState = "none";
                    }
                }
            }

            function stopCurrentAudio() {
                if (currentAudio) {
                    currentAudio.pause();
                    currentAudio.currentTime = 0;
                    currentAudio = null;
                }

                if (currentButton) {
                    currentButton.classList.remove("active", "paused");
                    currentButton = null;
                }

                updateStatus("ready");
            }

            function playAudio(button, soundFile) {
                // Stop current audio if playing
                if (currentAudio) {
                    // If clicking the same button, toggle play/pause
                    if (currentButton === button) {
                        if (isPaused) {
                            currentAudio.play();
                            updateStatus("playing");
                        } else {
                            currentAudio.pause();
                            updateStatus("paused");
                        }
                        return;
                    }
                    stopCurrentAudio();
                }

                // Create new audio element
                currentAudio = new Audio(soundFile);
                currentAudio.loop = true;
                currentButton = button;

                // Set up event handlers
                currentAudio.addEventListener("play", () => {
                    updateStatus("playing");
                });

                currentAudio.addEventListener("pause", () => {
                    updateStatus("paused");
                });

                currentAudio.addEventListener("ended", () => {
                    // This shouldn't happen with loop=true, but just in case
                    currentAudio.play();
                });

                currentAudio.addEventListener("error", (e) => {
                    console.error("Audio error:", e);
                    alert(
                        `Error loading audio file: ${soundFile}\nPlease ensure the file exists in the same directory.`
                    );
                    stopCurrentAudio();
                });

                // Start playing
                currentAudio.play().catch((err) => {
                    console.error("Play error:", err);
                    alert(
                        "Error playing audio. Please check that the audio files are available."
                    );
                    stopCurrentAudio();
                });
            }

            // Add click handlers to all buttons
            buttons.forEach((button) => {
                button.addEventListener("click", () => {
                    const soundFile = button.getAttribute("data-sound");
                    playAudio(button, soundFile);
                });
            });
        </script>
    </body>
</html>
